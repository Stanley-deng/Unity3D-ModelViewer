name: Unity - Build

# on: 
#   push:
#       branches:
#         - main

on: workflow_dispatch

jobs:
  build:
    name: Build project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v2

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      # Cache
      - uses: actions/cache@v2
        with:
          path: ModelViewer/Library
          key: Library-${{ hashFiles('ModelViewer/Assets/**', 'ModelViewer/Packages/**', 'ModelViewer/ProjectSettings/**') }}
          restore-keys: |
            Library-
      # Test
#       - name: Run tests
#         uses: game-ci/unity-test-runner@v2
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#         with:
#           githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          projectPath: ./ModelViewer/

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build
          
# UPLOAD BUILD TO AZURE CONTAINER
  upload:
    name: Upload to Azure Storage
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Load artifact from previous job
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: Build
          path: build
      - name: List files
        run: ls -R
        working-directory: build

      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload Build to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
              az storage blob upload-batch --destination test-model-viewer-build --account-name unityviewerbuild --destination-path WebGL/WebGL --source build/WebGL/WebGL/Build --content-encoding gzip 

      # - name: Upload StreamingAssets to blob storage
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #         az storage blob upload-batch --destination test-model-viewer-build --account-name unityviewerbuild --destination-path WebGL/WebGL --source build/StreamingAssets

      # - name: Upload TemplateData to blob storage
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #         az storage blob upload-batch --destination test-model-viewer-build --account-name unityviewerbuild --destination-path WebGL/WebGL --source build/TemplateData
      
      # - name: Upload index to blob storage
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #         az storage blob upload -f build/index.html --account-name unityviewerbuild --container-name test-model-viewer-build --name WebGL/WebGL/index.html

  
      # # Load artifact from previous job
      # - uses: actions/checkout@v3
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: Build
      #     path: build
      # - name: List files
      #   run: ls -R
      #   working-directory: build

      # # Upload to azure blob storage 
      # - uses: bacongobbler/azure-blob-storage-upload@main
      #   with:
      #     source_dir: build
      #     container_name: test-model-viewer-build
      #     connection_string: ${{ secrets.BLOB_CONNECTION_STRING }}
      #     extra_args: --content-encoding gzip
      #     overwrite: 'true'

      # # update content-encoding 
